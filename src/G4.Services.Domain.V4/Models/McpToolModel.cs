using System.Collections.Generic;
using System.Text.Json.Serialization;

namespace G4.Models
{
    /// <summary>
    /// Represents a tool available in the MCP (Model Context Protocol) system,
    /// including its name, description, and input schema.
    /// </summary>
    public class McpToolModel
    {
        #region *** Properties   ***
        /// <summary>
        /// Gets or sets the human-readable description of what this tool does.
        /// </summary>
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the schema defining the inputs accepted by this tool.
        /// </summary>
        public ParameterSchemaModel InputSchema { get; set; }

        /// <summary>
        /// Gets or sets the schema defining the outputs generated by this tool.
        /// </summary>
        public ParameterSchemaModel OutputSchema { get; set; }

        /// <summary>
        /// Gets or sets the unique name of the tool.
        /// </summary>
        public string Name { get; set; }
        #endregion

        #region *** Nested Types ***
        /// <summary>
        /// Defines the shape of the JSON object that will be passed or return as parameters
        /// when invoking the tool.
        /// </summary>
        public class ParameterSchemaModel
        {
            /// <summary>
            /// Gets or sets the human-readable description of this parameter schema.
            /// </summary>
            public string Description { get; set; }

            /// <summary>
            /// Gets or sets the set of named properties (parameters) and their schemas.
            /// </summary>
            public Dictionary<string, ScehmaPropertyModel> Properties { get; set; }

            /// <summary>
            /// Gets or sets the list of property names that are required.
            /// </summary>
            public string[] Required { get; set; }

            /// <summary>
            /// Gets or sets the JSON schema type of this parameter schema (typically "object").
            /// </summary>
            public string Type { get; set; }
        }

        /// <summary>
        /// Describes an individual property within an parameter schema,
        /// including its description, allowed values, and type.
        /// </summary>
        public class ScehmaPropertyModel
        {
            /// <summary>
            /// Gets or sets the human-readable description of the property.
            /// </summary>
            public string Description { get; set; }

            /// <summary>
            /// Gets or sets the set of allowed literal values for this property.
            /// If empty or null, any value of the specified type is accepted.
            /// </summary>
            public string[] Enum { get; set; }

            /// <summary>
            /// Gets or sets the name of the property as it appears in JSON.
            /// </summary>
            [JsonIgnore]
            [Newtonsoft.Json.JsonIgnore]
            public string Name { get; set; }

            /// <summary>
            /// Gets or sets the set of named properties (parameters) and their schemas.
            /// </summary>
            public Dictionary<string, ScehmaPropertyModel> Properties { get; set; }

            /// <summary>
            /// Gets or sets the JSON schema types (e.g., "string", "integer") allowed for this property.
            /// </summary>
            public string[] Type { get; set; }

            /// <summary>
            /// Gets or sets a value indicating whether this property is required.
            /// </summary>
            [JsonIgnore]
            [Newtonsoft.Json.JsonIgnore]
            public bool Required { get; set; }
        }
        #endregion
    }
}
